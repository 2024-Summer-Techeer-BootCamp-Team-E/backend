version: "3.8"

services:
  mysqldb:
    build: ./db
    container_name: mysqldb
    env_file:
      - "./db/.env"
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  redis_container:
    image: redis:latest
    container_name: redis
    environment:
      - TZ=Asia/Seoul
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    depends_on:
      - backend
    labels:
      - "name=redis"
      - "mode=standalone"
    restart: always
    command: redis-server /usr/local/conf/redis.conf

  backend:
    build:
      context: ./django_backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - ./django_backend/static:/app/static
      - ./django_backend/media:/app/media
    restart: always
    depends_on:
      - mysqldb
    command: bash -c "
      python wait_mysql.py &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn --bind 0.0.0.0:8000 django_backend.wsgi:application
      "

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./django_backend/static:/app/static
      - ./django_backend/media:/app/media
    depends_on:
#      - frontend
      - backend

#  frontend:
#    build:
#      context: ../frontend
#      dockerfile: ../frontend/Dockerfile
#      args:
#        API_URL: "*"
#    container_name: frontend
#    command: yarn dev
#    ports:
#      - "3000:3000"
#    volumes:
#      - ../frontend:/frontend
#      - /frontend/node_modules
#    image: run
#    tty: true

volumes:
  mysql-data:
  redis-data:
